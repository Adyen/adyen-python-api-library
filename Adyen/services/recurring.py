"""
    Adyen Recurring API

    The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created with validation during a payment request.  For more information, refer to our [Tokenization documentation](https://docs.adyen.com/online-payments/tokenization). ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Recurring API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Recurring/v68/disable ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Recurring/v68/disable ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  # noqa: E501

    The version of the OpenAPI document: 68
    Contact: developer-experience@adyen.com
    Generated by: https://openapi-generator.tech
"""

from .base import AdyenServiceBase


class AdyenRecurringApi(AdyenServiceBase):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, client=None):
        super(AdyenRecurringApi, self).__init__(client=client)
        self.service = "recurring"

    def create_new_permits_linked_to_recurring_contract(self, request, idempotency_key=None, **kwargs):
        """
        Create new permits linked to a recurring contract.
        """
        endpoint = f"/createPermit"
        endpoint = endpoint.replace('/', '', 1)
        method = "POST"
        return self.client.call_adyen_api(request, self.service, method, endpoint, idempotency_key, **kwargs)

    def disable_stored_payment_details(self, request, idempotency_key=None, **kwargs):
        """
        Disable stored payment details
        """
        endpoint = f"/disable"
        endpoint = endpoint.replace('/', '', 1)
        method = "POST"
        return self.client.call_adyen_api(request, self.service, method, endpoint, idempotency_key, **kwargs)

    def disable_existing_permit(self, request, idempotency_key=None, **kwargs):
        """
        Disable an existing permit.
        """
        endpoint = f"/disablePermit"
        endpoint = endpoint.replace('/', '', 1)
        method = "POST"
        return self.client.call_adyen_api(request, self.service, method, endpoint, idempotency_key, **kwargs)

    def get_stored_payment_details(self, request, idempotency_key=None, **kwargs):
        """
        Get stored payment details
        """
        endpoint = f"/listRecurringDetails"
        endpoint = endpoint.replace('/', '', 1)
        method = "POST"
        return self.client.call_adyen_api(request, self.service, method, endpoint, idempotency_key, **kwargs)

    def ask_issuer_to_notify_shopper(self, request, idempotency_key=None, **kwargs):
        """
        Ask issuer to notify the shopper
        """
        endpoint = f"/notifyShopper"
        endpoint = endpoint.replace('/', '', 1)
        method = "POST"
        return self.client.call_adyen_api(request, self.service, method, endpoint, idempotency_key, **kwargs)

    def schedule_running_account_updater(self, request, idempotency_key=None, **kwargs):
        """
        Schedule running the Account Updater
        """
        endpoint = f"/scheduleAccountUpdater"
        endpoint = endpoint.replace('/', '', 1)
        method = "POST"
        return self.client.call_adyen_api(request, self.service, method, endpoint, idempotency_key, **kwargs)

